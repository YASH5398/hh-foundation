rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    // Allow read access to public fields for leaderboard functionality
    match /users/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         // Allow reading public fields for leaderboard
         resource.data.keys().hasAll(['totalEarnings', 'name', 'userId', 'currentLevel', 'directReferrals', 'isActivated', 'profileImage', 'referralCount', 'fullName']));
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Chats collection - participants can read/write their own chats
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // Messages subcollection within chats
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow list: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }

    // Messages collection - participants can read/write messages
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.recipientId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow list: if request.auth != null;
    }

    // Send Help collection
    match /sendHelp/{docId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      
      // Chat subcollection for send help transactions
      match /chat/{messageId} {
        allow read, write: if request.auth != null && 
          (request.auth.uid == get(/databases/$(database)/documents/sendHelp/$(docId)).data.senderId ||
           request.auth.uid == get(/databases/$(database)/documents/sendHelp/$(docId)).data.receiverId);
      }
    }

    // Receive Help collection
    match /receiveHelp/{docId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.receiverId;
      
      // Chat subcollection for receive help transactions
      match /chat/{messageId} {
        allow read, write: if request.auth != null && 
          (request.auth.uid == get(/databases/$(database)/documents/receiveHelp/$(docId)).data.senderId ||
           request.auth.uid == get(/databases/$(database)/documents/receiveHelp/$(docId)).data.receiverId);
      }
    }

    // EPINs collection
    match /epins/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId || 
         request.auth.uid == resource.data.createdBy);
      allow create: if request.auth != null;
    }

    // EPIN Requests collection
    match /epinRequests/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Notifications collection
    match /notifications/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }

    // Support tickets collection
    match /supportTickets/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Admin collections - only admins can access
    match /admins/{docId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Broadcasts collection - read only for authenticated users
    match /broadcasts/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Levels collection - read only for authenticated users
    match /levels/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Leaderboard collection - read only for authenticated users
    match /leaderboard/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}